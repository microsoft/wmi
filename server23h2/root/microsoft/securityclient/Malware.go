// Copyright 2019 (c) Microsoft Corporation.
// Licensed under the MIT license.

//
// Author:
//      Auto Generated on 6/14/2024 using wmigen
//      Source root.Microsoft.SecurityClient
//////////////////////////////////////////////
package securityclient

import (
	"github.com/microsoft/wmi/pkg/base/query"
	"github.com/microsoft/wmi/pkg/errors"
	cim "github.com/microsoft/wmi/pkg/wmiinstance"
	"reflect"
)

// Malware struct
type Malware struct {
	*SerializableToXml

	// Was the cleaning action successful?
	ActionSuccess bool

	// Action Time in the Round-Trip Format
	ActionTime string

	// Category ID - Enumeration
	CategoryID Malware_CategoryID

	// Cleaning Action - Enumeration
	CleaningAction Malware_CleaningAction

	// Unique Detection ID (GUID)
	DetectionID string

	// How was the malware detected (Enumeration)? RTP/Scheduled Scan/...
	DetectionSource Malware_DetectionSource

	// Detection time in the Round-Trip Format
	DetectionTime string

	// Domain hosting the user
	Domain string

	// Error code if cleaning action failed
	ErrorCode int32

	// What happened to the malware? (Enumeration)? Blocked/Allowed/Executing/...
	ExecutionStatus Malware_ExecutionStatus

	// Path to infected resource
	Path string

	// Pending actions (bit flags indicating reboot/full scan/manual steps required)
	PendingActions Malware_PendingActions

	// Infected process
	Process string

	// Version of the security client
	ProductVersion string

	// Severity ID - Enumeration
	SeverityID Malware_SeverityID

	// Threat ID - Enumeration
	ThreatID int64

	// Name of the threat
	ThreatName string

	// User account hosting the infected process
	User string
}

func NewMalwareEx1(instance *cim.WmiInstance) (newInstance *Malware, err error) {
	tmp, err := NewSerializableToXmlEx1(instance)

	if err != nil {
		return
	}
	newInstance = &Malware{
		SerializableToXml: tmp,
	}
	return
}

func NewMalwareEx6(hostName string,
	wmiNamespace string,
	userName string,
	password string,
	domainName string,
	query *query.WmiQuery) (newInstance *Malware, err error) {
	tmp, err := NewSerializableToXmlEx6(hostName, wmiNamespace, userName, password, domainName, query)

	if err != nil {
		return
	}
	newInstance = &Malware{
		SerializableToXml: tmp,
	}
	return
}

// SetActionSuccess sets the value of ActionSuccess for the instance
func (instance *Malware) SetPropertyActionSuccess(value bool) (err error) {
	return instance.SetProperty("ActionSuccess", (value))
}

// GetActionSuccess gets the value of ActionSuccess for the instance
func (instance *Malware) GetPropertyActionSuccess() (value bool, err error) {
	retValue, err := instance.GetProperty("ActionSuccess")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(bool)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " bool is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = bool(valuetmp)

	return
}

// SetActionTime sets the value of ActionTime for the instance
func (instance *Malware) SetPropertyActionTime(value string) (err error) {
	return instance.SetProperty("ActionTime", (value))
}

// GetActionTime gets the value of ActionTime for the instance
func (instance *Malware) GetPropertyActionTime() (value string, err error) {
	retValue, err := instance.GetProperty("ActionTime")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetCategoryID sets the value of CategoryID for the instance
func (instance *Malware) SetPropertyCategoryID(value Malware_CategoryID) (err error) {
	return instance.SetProperty("CategoryID", (value))
}

// GetCategoryID gets the value of CategoryID for the instance
func (instance *Malware) GetPropertyCategoryID() (value Malware_CategoryID, err error) {
	retValue, err := instance.GetProperty("CategoryID")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_CategoryID(valuetmp)

	return
}

// SetCleaningAction sets the value of CleaningAction for the instance
func (instance *Malware) SetPropertyCleaningAction(value Malware_CleaningAction) (err error) {
	return instance.SetProperty("CleaningAction", (value))
}

// GetCleaningAction gets the value of CleaningAction for the instance
func (instance *Malware) GetPropertyCleaningAction() (value Malware_CleaningAction, err error) {
	retValue, err := instance.GetProperty("CleaningAction")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_CleaningAction(valuetmp)

	return
}

// SetDetectionID sets the value of DetectionID for the instance
func (instance *Malware) SetPropertyDetectionID(value string) (err error) {
	return instance.SetProperty("DetectionID", (value))
}

// GetDetectionID gets the value of DetectionID for the instance
func (instance *Malware) GetPropertyDetectionID() (value string, err error) {
	retValue, err := instance.GetProperty("DetectionID")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetDetectionSource sets the value of DetectionSource for the instance
func (instance *Malware) SetPropertyDetectionSource(value Malware_DetectionSource) (err error) {
	return instance.SetProperty("DetectionSource", (value))
}

// GetDetectionSource gets the value of DetectionSource for the instance
func (instance *Malware) GetPropertyDetectionSource() (value Malware_DetectionSource, err error) {
	retValue, err := instance.GetProperty("DetectionSource")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_DetectionSource(valuetmp)

	return
}

// SetDetectionTime sets the value of DetectionTime for the instance
func (instance *Malware) SetPropertyDetectionTime(value string) (err error) {
	return instance.SetProperty("DetectionTime", (value))
}

// GetDetectionTime gets the value of DetectionTime for the instance
func (instance *Malware) GetPropertyDetectionTime() (value string, err error) {
	retValue, err := instance.GetProperty("DetectionTime")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetDomain sets the value of Domain for the instance
func (instance *Malware) SetPropertyDomain(value string) (err error) {
	return instance.SetProperty("Domain", (value))
}

// GetDomain gets the value of Domain for the instance
func (instance *Malware) GetPropertyDomain() (value string, err error) {
	retValue, err := instance.GetProperty("Domain")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetErrorCode sets the value of ErrorCode for the instance
func (instance *Malware) SetPropertyErrorCode(value int32) (err error) {
	return instance.SetProperty("ErrorCode", (value))
}

// GetErrorCode gets the value of ErrorCode for the instance
func (instance *Malware) GetPropertyErrorCode() (value int32, err error) {
	retValue, err := instance.GetProperty("ErrorCode")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = int32(valuetmp)

	return
}

// SetExecutionStatus sets the value of ExecutionStatus for the instance
func (instance *Malware) SetPropertyExecutionStatus(value Malware_ExecutionStatus) (err error) {
	return instance.SetProperty("ExecutionStatus", (value))
}

// GetExecutionStatus gets the value of ExecutionStatus for the instance
func (instance *Malware) GetPropertyExecutionStatus() (value Malware_ExecutionStatus, err error) {
	retValue, err := instance.GetProperty("ExecutionStatus")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_ExecutionStatus(valuetmp)

	return
}

// SetPath sets the value of Path for the instance
func (instance *Malware) SetPropertyPath(value string) (err error) {
	return instance.SetProperty("Path", (value))
}

// GetPath gets the value of Path for the instance
func (instance *Malware) GetPropertyPath() (value string, err error) {
	retValue, err := instance.GetProperty("Path")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetPendingActions sets the value of PendingActions for the instance
func (instance *Malware) SetPropertyPendingActions(value Malware_PendingActions) (err error) {
	return instance.SetProperty("PendingActions", (value))
}

// GetPendingActions gets the value of PendingActions for the instance
func (instance *Malware) GetPropertyPendingActions() (value Malware_PendingActions, err error) {
	retValue, err := instance.GetProperty("PendingActions")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_PendingActions(valuetmp)

	return
}

// SetProcess sets the value of Process for the instance
func (instance *Malware) SetPropertyProcess(value string) (err error) {
	return instance.SetProperty("Process", (value))
}

// GetProcess gets the value of Process for the instance
func (instance *Malware) GetPropertyProcess() (value string, err error) {
	retValue, err := instance.GetProperty("Process")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetProductVersion sets the value of ProductVersion for the instance
func (instance *Malware) SetPropertyProductVersion(value string) (err error) {
	return instance.SetProperty("ProductVersion", (value))
}

// GetProductVersion gets the value of ProductVersion for the instance
func (instance *Malware) GetPropertyProductVersion() (value string, err error) {
	retValue, err := instance.GetProperty("ProductVersion")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetSeverityID sets the value of SeverityID for the instance
func (instance *Malware) SetPropertySeverityID(value Malware_SeverityID) (err error) {
	return instance.SetProperty("SeverityID", (value))
}

// GetSeverityID gets the value of SeverityID for the instance
func (instance *Malware) GetPropertySeverityID() (value Malware_SeverityID, err error) {
	retValue, err := instance.GetProperty("SeverityID")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int32)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int32 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = Malware_SeverityID(valuetmp)

	return
}

// SetThreatID sets the value of ThreatID for the instance
func (instance *Malware) SetPropertyThreatID(value int64) (err error) {
	return instance.SetProperty("ThreatID", (value))
}

// GetThreatID gets the value of ThreatID for the instance
func (instance *Malware) GetPropertyThreatID() (value int64, err error) {
	retValue, err := instance.GetProperty("ThreatID")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(int64)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " int64 is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = int64(valuetmp)

	return
}

// SetThreatName sets the value of ThreatName for the instance
func (instance *Malware) SetPropertyThreatName(value string) (err error) {
	return instance.SetProperty("ThreatName", (value))
}

// GetThreatName gets the value of ThreatName for the instance
func (instance *Malware) GetPropertyThreatName() (value string, err error) {
	retValue, err := instance.GetProperty("ThreatName")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}

// SetUser sets the value of User for the instance
func (instance *Malware) SetPropertyUser(value string) (err error) {
	return instance.SetProperty("User", (value))
}

// GetUser gets the value of User for the instance
func (instance *Malware) GetPropertyUser() (value string, err error) {
	retValue, err := instance.GetProperty("User")
	if err != nil {
		return
	}
	if retValue == nil {
		// Doesn't have any value. Return empty
		return
	}

	valuetmp, ok := retValue.(string)
	if !ok {
		err = errors.Wrapf(errors.InvalidType, " string is Invalid. Expected %s", reflect.TypeOf(retValue))
		return
	}

	value = string(valuetmp)

	return
}
